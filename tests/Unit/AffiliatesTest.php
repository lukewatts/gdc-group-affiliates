<?php

namespace Tests\Unit;

use App\Utilities\Affiliates;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;


class AffiliatesTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        // Setup mock affiliates file
        Storage::fake('affiliates')->put(
            'affiliates.txt',
            file_get_contents(__DIR__ . '/mocks/affiliates.txt')
        );
    }

    public function testFakeAffiliatesFileExists(): void
    {
        $this->assertTrue(Storage::disk('affiliates')->exists('affiliates.txt'));
    }

    /**
     * @depends testFakeAffiliatesFileExists
     */
    public function testIsValidReturnsTrueWhenPathAndDiskExist(): void
    {
        $affiliates = new Affiliates('affiliates.txt', 'affiliates');
        $this->assertTrue($affiliates->isValid());
    }

    /**
     * @depends testFakeAffiliatesFileExists
     */
    public function testIsValidReturnsFalseWhenPathDoesNotExist(): void
    {
        $affiliates = new Affiliates('does-not-exist.txt', 'affiliates');
        $this->assertFalse($affiliates->isValid());
    }

    /**
     * @depends testIsValidReturnsTrueWhenPathAndDiskExist
     */
    public function testGetErrorIsNullWhenPathAndDiskExist(): void
    {
        $affiliates = new Affiliates('affiliates.txt', 'affiliates');
        $affiliates->isValid();

        $this->assertNull($affiliates->getError());
    }

    /**
     * @depends testIsValidReturnsFalseWhenPathDoesNotExist
     */
    public function testGetErrorIsNotNullWhenPathDoesNotExist(): void
    {
        $affiliates = new Affiliates('does-not-exist.txt', 'affiliates');
        $affiliates->isValid();

        $this->assertNotNull($affiliates->getError());
    }
}
